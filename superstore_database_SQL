Schema SQL
1
CREATE TABLE superstore (
2
    item_id INTEGER PRIMARY KEY,
3
    item_name TEXT,
4
    category TEXT,
5
    price DECIMAL(10, 2),
6
    stock_quantity INTEGER,
7
    average_rating DECIMAL(3, 2)
8
);
9
​
10
INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
11
VALUES
12
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
13
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
14
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
15
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
16
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
17
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
18
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
19
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
20
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
21
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
22
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
23
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
24
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
25
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
26
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);
27
--------------------------------------------------------------------------------
​
--prompt 1: order items by price (q#1)
Select *
From superstore
Order by price 
;

--prompt 2 SQL query that will show a statistic about the item prices (q#2)
Select SUM(price)
From superstore
;
--q#3
Select item_name, AVG(price)
From superstore
Group by item_name
Order by AVG(price)
;
--q#4
Select item_id, item_name, category, Min(price)
From superstore
Group by category
Order by Min(price)
;
--q#5
Select MAX(price), item_name, category
FROM superstore
GROUP BY category
order by MAX(price) Desc
;
--prompt 3: show a statistic about the price for items in the category of "Kitchen Supplies" (q#6)
Select category 'Kitchen Supplies', Avg(price), Min(price), Max(price)
From superstore
;
--Prompt 4: Custom queries 
--Check which items are low in stock q#7
Select item_id, item_name, category, stock_quantity
From superstore
where stock_quantity <25
Order by stock_quantity
;
--check which items are highest rated q#8
Select *
From superstore
Where average_rating >= 4.5
Order by average_rating
;
--Check how many items are in the Kitchen Supplies category q#9
Select category, Count(category)
From superstore
Where category = 'Kitchen Supplies'
;
--Check which higher-than-average priced items are low in stock q#10
SELECT * FROM superstore
WHERE price > (SELECT AVG(price) FROM superstore) AND stock_quantity <30
ORDER by average_rating
;






