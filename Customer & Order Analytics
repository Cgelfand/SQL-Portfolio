--#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

Database download: https://www.dropbox.com/scl/fi/vd10nx4bo5soq7xg78sdg/BIT_DB?rlkey=0yh592o2nl1766n8l6hod5uc9&e=1&dl=0

Queries used to gather information before analysis:

SELECT *
FROM BIT_DB.customers
Where length(order_id) = 6
AND order_id <> 'ORDER ID'
;

Select *
From Bit_DB.JanSales Limit 20
;

SELECT * 
FROM Bit_DB.JanSales Jan 
LEFT JOIN Bit_DB.customers Cust
ON Jan.orderID = Cust.order_id
;

--Project: Customer & Order Analytics

--Q1 How many many unique orders were placed in January? In other words, how many distinct order ids do we have?

Select COUNT(DISTINCT orderID) 
FROM Bit_DB.JanSales Jan
WHERE length(orderID)= 6
AND orderID <> 'Order ID'
;

--Q2 How many of those orders were placed for an iphone

Select COUNT(DISTINCT orderID) 
FROM Bit_DB.JanSales Jan
WHERE length(orderID)= 6
AND orderID <> 'Order ID'
AND Product = 'iPhone'
;

--Q3 Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT Feb.orderID, Cust.acctnum
FROM Bit_DB.FebSales Feb
INNER JOIN Bit_DB.customers Cust
ON Feb.orderID = Cust.order_ID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';
;

--Q4 Which product was the cheapest one sold in January and what was the price?
--method one, with a subquery
SELECT DISTINCT Product, Price
From BIT_DB.JanSales
WHERE Price = (SELECT MIN(price) From BIT_DB.JanSales) 
;
--method 2, ordering and limiting
SELECT DISTINCT Product, Price
From BIT_DB.JanSales
ORDER BY Price Limit 1
;

--Q5 What is the total revenue for each product sold in January?

SELECT Product, SUM(Quantity) * Price AS revenue
FROM Bit_DB.JanSales Jan 
WHERE Product <> '' and Product <> 'Product'
GROUP By Product
;

--Q6 Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product, quantity, location, Sum(Quantity)*price AS revenue 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
;

--How about products sold in February at 678 Maple St, Seattle, WA 98101?

SELECT sum(Quantity),product,
sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '678 Maple St, Seattle, WA 98101'
GROUP BY product;

--Q7 How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT avg(Quantity*price), Count(DISTINCT Cust.acctnum)
FROM Bit_DB.FebSales Feb
LEFT JOIN BIT_DB.customers Cust
ON Feb.orderID = Cust.Order_ID
WHERE Feb.Quantity >2
AND orderID <> 'Order ID'
AND length(orderID) = 6     --this line and the previous line help to eliminate incomplete or missing data from the table and keep the results from the query accurate
;

-- Practice with using between, like, and searching with a % before, after, or on both sides of a character string.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' and '02/18/19 00:00'             --Searches between the two dates and times (DD/MM/YY HH:MM)
;

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35'           --Exact time of order is known
;

SELECT sum(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%'            --Filters all orders from 2.18.19 regardless of time
;

SELECT DISTINCT Product, Price
FROM BIT_DB.FebSales
WHERE Price like '%.99'                   --Filters the prices to only those that end in .99
;

SELECT DISTINCT Product, Price
FROM BIT_DB.FebSales
WHERE Product like '%batteries%'          --Filters products to anything that has batteries in the title (ex: aa Batteries 4 pack, AAA batteries 2 pack, AA batteries 2 pack)
;

--Practical application of these skills: List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT Product, SUM(quantity)                   -- sum to find the total quantity of each item sold
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'           --In the location column it shows addresses with house number city state etc. This will show all orders in los angeles disregarding information before or after the city.
Group by Product                              -- Group By required after aggregate functions
;

